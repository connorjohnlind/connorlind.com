/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}@font-face{font-family:Raleway;src:url(../fonts/Raleway-Regular.ttf) format("truetype")}@font-face{font-family:Raleway-semibold;src:url(../fonts/Raleway-SemiBold.ttf) format("truetype")}@font-face{font-family:Raleway-bold;src:url(../fonts/Raleway-Bold.ttf) format("truetype")}@-webkit-keyframes a{0%{opacity:0}to{opacity:1}}@keyframes a{0%{opacity:0}to{opacity:1}}@font-face{font-family:Material Design Icons;src:url(../fonts/materialdesignicons-webfont.eot?v=2.0.46);src:url(../fonts/materialdesignicons-webfont.eot?#iefix&v=2.0.46) format("embedded-opentype"),url(../fonts/materialdesignicons-webfont.woff2?v=2.0.46) format("woff2"),url(../fonts/materialdesignicons-webfont.woff?v=2.0.46) format("woff"),url(../fonts/materialdesignicons-webfont.ttf?v=2.0.46) format("truetype"),url(../fonts/materialdesignicons-webfont.svg?v=2.0.46#materialdesigniconsregular) format("svg");font-weight:400;font-style:normal}.mdi-set,.mdi:before{display:inline-block;font:normal normal normal 24px/1 Material Design Icons;font-size:inherit;text-rendering:auto;line-height:inherit;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.mdi-arrow-right:before{content:"\F054"}.mdi-arrow-right-bold:before{content:"\F733"}.mdi-arrow-right-bold-box:before{content:"\F734"}.mdi-arrow-right-bold-box-outline:before{content:"\F735"}.mdi-arrow-right-bold-circle:before{content:"\F056"}.mdi-arrow-right-bold-circle-outline:before{content:"\F057"}.mdi-arrow-right-bold-hexagon-outline:before{content:"\F058"}.mdi-arrow-right-box:before{content:"\F6C1"}.mdi-arrow-right-drop-circle:before{content:"\F059"}.mdi-arrow-right-drop-circle-outline:before{content:"\F05A"}.mdi-arrow-right-thick:before{content:"\F055"}.mdi-chevron-double-up:before{content:"\F13F"}.mdi-facebook:before{content:"\F20C"}.mdi-facebook-box:before{content:"\F20D"}.mdi-facebook-messenger:before{content:"\F20E"}.mdi-github-circle:before{content:"\F2A4"}.mdi-instagram:before{content:"\F2FE"}.mdi-lightbulb:before{content:"\F335"}.mdi-lightbulb-on:before{content:"\F6E7"}.mdi-lightbulb-on-outline:before{content:"\F6E8"}.mdi-lightbulb-outline:before{content:"\F336"}.mdi-linkedin:before{content:"\F33B"}.mdi-linkedin-box:before{content:"\F33C"}.mdi-message-bulleted:before{content:"\F6A1"}.mdi-message-bulleted-off:before{content:"\F6A2"}.mdi-speedometer:before{content:"\F4C5"}.mdi-wrench:before{content:"\F5B7"}.mdi-18px.mdi-set,.mdi-18px.mdi:before{font-size:18px}.mdi-24px.mdi-set,.mdi-24px.mdi:before{font-size:24px}.mdi-36px.mdi-set,.mdi-36px.mdi:before{font-size:36px}.mdi-48px.mdi-set,.mdi-48px.mdi:before{font-size:48px}.mdi-dark:before{color:rgba(0,0,0,.54)}.mdi-dark.mdi-inactive:before{color:rgba(0,0,0,.26)}.mdi-light:before{color:#fff}.mdi-light.mdi-inactive:before{color:hsla(0,0%,100%,.3)}.mdi-rotate-45:before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.mdi-rotate-90:before{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.mdi-rotate-135:before{-webkit-transform:rotate(135deg);transform:rotate(135deg)}.mdi-rotate-180:before{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.mdi-rotate-225:before{-webkit-transform:rotate(225deg);transform:rotate(225deg)}.mdi-rotate-270:before{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.mdi-rotate-315:before{-webkit-transform:rotate(315deg);transform:rotate(315deg)}.mdi-flip-h:before{-webkit-transform:scaleX(-1);transform:scaleX(-1);-webkit-filter:FlipH;filter:FlipH;-ms-filter:"FlipH"}.mdi-flip-v:before{-webkit-transform:scaleY(-1);transform:scaleY(-1);-webkit-filter:FlipV;filter:FlipV;-ms-filter:"FlipV"}.mdi-spin:before{-webkit-animation:b 2s infinite linear;animation:b 2s infinite linear}@-webkit-keyframes b{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes b{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}*{-webkit-box-sizing:border-box;box-sizing:border-box}.fade-in{-webkit-animation:a 2s ease both;animation:a 2s ease both}.flex{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.flex,.row{-webkit-box-direction:normal}.row{-webkit-box-orient:horizontal;-ms-flex-direction:row;flex-direction:row;width:100%}.flex.wrap{-ms-flex-wrap:wrap;flex-wrap:wrap}.row-break{width:100%}#main{padding-top:80px}body{color:#000;font-family:Raleway,Helvetica,"sans-serif";text-align:center;margin:0;font-size:8pt;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;overflow-x:hidden}section{padding:70px 0 90px;color:#616161;position:relative}section.section{max-width:1200px;margin:0 auto;width:100%}a{color:inherit;text-decoration:none}a.active{color:green}nav{bottom:0;left:0;position:relative;height:50px;width:100%;margin-bottom:-50px;color:#fff;background:#162023;border-bottom:3px solid green;text-align:left;z-index:1;font-family:Raleway-semibold}nav.flex{-webkit-box-align:center;-ms-flex-align:center;align-items:center}nav.fixed{top:0;bottom:inherit;left:0;position:fixed}.nav-wrap{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:32%;min-width:300px;max-width:700px}.header{font-size:25pt;font-family:Raleway-bold;position:relative;color:#444649;margin:0}.header-bar{margin:25px 0 75px;width:70px;height:4px;background:#444649}.label{font-size:14pt;font-weight:500}.button{background-color:transparent;padding:10px 15px;border:1px solid #fff;display:inline-block;font-size:12pt;color:#fff;-webkit-transition:all .5s;transition:all .5s;cursor:pointer}.button:hover{background-color:#04c2c9;border-color:#04c2c9}.button .mdi{vertical-align:middle}.hex-wrap{text-align:center;position:relative;width:80px;height:80px}.hex,.hex-wrap{display:inline-block}.hex{background-color:green;height:100%;width:57.735%}.hex:before{-webkit-transform:rotate(60deg);transform:rotate(60deg)}.hex:after,.hex:before{position:absolute;top:0;right:21.1325%;background-color:inherit;height:inherit;width:inherit;content:""}.hex:after{-webkit-transform:rotate(-60deg);transform:rotate(-60deg)}#home{background:#1b342f;color:#fff;padding:0;height:100vh;line-height:20pt}#home .header{font-family:Raleway;font-size:17pt;font-weight:400;color:#fff;margin:0 0 20px}#home span{color:green;font-family:Raleway-bold}#home .button{margin-bottom:50px}#particles-js{position:absolute;top:0;left:0;width:100vw;height:100%}#about{background-color:#fff}#about .section{padding:0 10px}#about .features{margin-bottom:50px}#about .feature{padding:0 10px;width:95%;height:220px}#about .feature .icon{margin:auto;width:80px;height:80px;font-size:60pt;color:#1b342f}#about .feature p{margin:0 auto;font-size:9pt}#portfolio{background-color:#f5f5f5}#portfolio .header-bar{margin-bottom:50px}#portfolio .portfolio{width:80%;max-width:600px}#portfolio .portfolio img{min-width:150px;width:50%;max-width:400px;border-radius:10px;margin-top:25px}#contact{background:#162023}#contact,#contact .header{color:#fff}#contact .header-bar{margin-bottom:60px;background:#fff;width:110px}#contact .highlight{font-weight:600;color:#04c2c9}#contact p{font-size:11pt}#contact svg{position:absolute;top:0;left:0}#contact form{margin:40px auto 0;width:92%;max-width:500px}#contact input[type=email],#contact input[type=text],#contact textarea{display:block;width:100%;outline:none;border:0;border-radius:5px;padding:10px 15px;background:#36544e;font-size:12pt;margin-bottom:3px;color:#fff}#contact textarea{min-height:150px;margin-bottom:5px}#contact .button{float:right;margin:5px 0 0;font-size:12pt;padding:10px 30px;color:#fff;background:transparent;outline:0;border-radius:5px}#contact .button:hover{background:#04c2c9}#contact #success{height:0;width:100%;overflow:hidden;position:relative;-webkit-transition:height .25s;transition:height .25s}#contact #success.expand{height:36px}#contact #success div{background:#04c986;color:#157051;font-size:10pt;font-weight:600;padding:5px 0;border:1px solid #157c59}#contact #close{position:absolute;padding:5px 15px;font-size:12pt;font-weight:600;right:0;cursor:pointer}footer{background:#1b342f;padding:70px 0 50px;position:relative;color:#fff}footer .mdi-chevron-double-up{position:absolute;top:-25px;background:green;font-size:30pt;width:47px;height:50px;line-height:40pt;left:0;right:0;margin:0 auto;cursor:pointer;border-radius:50%}footer .mdi-chevron-double-up:hover{background:#000}footer .icon-wrap .icon{overflow:hidden;cursor:pointer;width:55px;height:55px;position:relative;text-align:center;margin:0 15px;background:#162023;font-size:18pt;border-radius:30%}footer .icon-wrap .mdi{text-align:center;color:#fff}footer .icon-wrap .icon:hover{background:#04c2c9;-webkit-box-shadow:0 0 0 3px rgba(4,94,201,.1);box-shadow:0 0 0 3px rgba(4,94,201,.1);-webkit-transform:scale(.9);transform:scale(.9)}footer .icon-wrap .icon:hover .mdi{color:#fff}footer .footnote{font-size:10pt;color:#8f9aa7;margin-top:35px;opacity:.6}footer .footnote span{font-family:Open Sans;color:green}@media screen and (min-width:600px){body{font-size:12pt}.header{font-size:30pt}.header-bar{margin:25px 0 100px}.label{font-family:Raleway-bold;font-size:18pt;margin-bottom:10px}.button{font-size:14pt;border:2px solid #fff}#home .header{font-size:30pt;line-height:36pt}#about .feature{height:300px}#about .feature p{width:90%;margin:0 auto;font-size:12pt}#portfolio h2{line-height:25pt}#contact p{font-size:13pt}}@media screen and (min-width:960px){.row-break{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
